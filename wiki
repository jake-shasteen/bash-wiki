#!/bin/zsh

# - Will need to be able to fetch HTML
#   - Maybe we want to cache it
# - Will need to be able to parse the HTML in certain ways
#   - First sentence of article
#   - Article sections
#   - Recursive -- article sections will need first sentence, and may have subsections

# We need at least the article name
if [[ $# -lt 1 ]]
  then
    echo "Illegal number of parameters"
    exit 0
fi


# Capitalize first character of $1
first=`echo $1 | colrm 2`
rest=`echo $1 | colrm 1 1`
capitalized=`echo $first | tr '[a-z]' '[A-Z]'`$rest


# Check if we have the html page cached
if [[ ! -e $1.html ]]
  then
    curl "https://en.wikipedia.org/wiki/$capitalized" > $1.html
fi

if [[ $# -eq 1 ]]
  then
    # TODO: Handle making it only the first sentence
    cat $1.html | grep '<p>' | head -2 | sed 's/<[^>]*>//g'
    echo ""
    cat $1.html | grep 'toclevel-1' | sed 's/<[^>]*>//g' | sed 's/\([^0-9]\) /\1_/g'
  else
    # TODO: Handle 'note' edge case better
    # TODO: Handle further subsections
    cat $1.html | grep -i "id=\"$2\"" -A1 | tail -n 1 | sed 's/<[^>]*>//g'
    echo ""
    cat $1.html | grep "toclevel" | grep -i $2 -A20 | awk '/toclevel-1/{p++} p==2{exit} p>=1' | sed 's/<[^>]*>//g' | sed 's/\([^0-9]\) /\1_/g'
fi
